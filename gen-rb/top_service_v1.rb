#
# Autogenerated by Thrift Compiler (0.8.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'taobao_types'

    module TaobaoThrift
      module TopServiceV1
        class Client
          include ::Thrift::Client

          def get_user_buyer(session, params)
            send_get_user_buyer(session, params)
            return recv_get_user_buyer()
          end

          def send_get_user_buyer(session, params)
            send_message('get_user_buyer', Get_user_buyer_args, :session => session, :params => params)
          end

          def recv_get_user_buyer()
            result = receive_message(Get_user_buyer_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_user_buyer failed: unknown result')
          end

          def get_shipping_addresses(session, params)
            send_get_shipping_addresses(session, params)
            return recv_get_shipping_addresses()
          end

          def send_get_shipping_addresses(session, params)
            send_message('get_shipping_addresses', Get_shipping_addresses_args, :session => session, :params => params)
          end

          def recv_get_shipping_addresses()
            result = receive_message(Get_shipping_addresses_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_shipping_addresses failed: unknown result')
          end

          def add_shipping_addresses(session, params)
            send_add_shipping_addresses(session, params)
            return recv_add_shipping_addresses()
          end

          def send_add_shipping_addresses(session, params)
            send_message('add_shipping_addresses', Add_shipping_addresses_args, :session => session, :params => params)
          end

          def recv_add_shipping_addresses()
            result = receive_message(Add_shipping_addresses_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'add_shipping_addresses failed: unknown result')
          end

          def get_itemcats(opts)
            send_get_itemcats(opts)
            return recv_get_itemcats()
          end

          def send_get_itemcats(opts)
            send_message('get_itemcats', Get_itemcats_args, :opts => opts)
          end

          def recv_get_itemcats()
            result = receive_message(Get_itemcats_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_itemcats failed: unknown result')
          end

          def get_item_dealinfo(session, params)
            send_get_item_dealinfo(session, params)
            return recv_get_item_dealinfo()
          end

          def send_get_item_dealinfo(session, params)
            send_message('get_item_dealinfo', Get_item_dealinfo_args, :session => session, :params => params)
          end

          def recv_get_item_dealinfo()
            result = receive_message(Get_item_dealinfo_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_item_dealinfo failed: unknown result')
          end

          def search_logistics_trace(session, params)
            send_search_logistics_trace(session, params)
            return recv_search_logistics_trace()
          end

          def send_search_logistics_trace(session, params)
            send_message('search_logistics_trace', Search_logistics_trace_args, :session => session, :params => params)
          end

          def recv_search_logistics_trace()
            result = receive_message(Search_logistics_trace_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'search_logistics_trace failed: unknown result')
          end

          def get_trade_bought(session, params)
            send_get_trade_bought(session, params)
            return recv_get_trade_bought()
          end

          def send_get_trade_bought(session, params)
            send_message('get_trade_bought', Get_trade_bought_args, :session => session, :params => params)
          end

          def recv_get_trade_bought()
            result = receive_message(Get_trade_bought_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_trade_bought failed: unknown result')
          end

          def get_trade_fullinfo(session, params)
            send_get_trade_fullinfo(session, params)
            return recv_get_trade_fullinfo()
          end

          def send_get_trade_fullinfo(session, params)
            send_message('get_trade_fullinfo', Get_trade_fullinfo_args, :session => session, :params => params)
          end

          def recv_get_trade_fullinfo()
            result = receive_message(Get_trade_fullinfo_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_trade_fullinfo failed: unknown result')
          end

          def create_trade(session, params)
            send_create_trade(session, params)
            return recv_create_trade()
          end

          def send_create_trade(session, params)
            send_message('create_trade', Create_trade_args, :session => session, :params => params)
          end

          def recv_create_trade()
            result = receive_message(Create_trade_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'create_trade failed: unknown result')
          end

          def get_trade_huashu_bought(session, params)
            send_get_trade_huashu_bought(session, params)
            return recv_get_trade_huashu_bought()
          end

          def send_get_trade_huashu_bought(session, params)
            send_message('get_trade_huashu_bought', Get_trade_huashu_bought_args, :session => session, :params => params)
          end

          def recv_get_trade_huashu_bought()
            result = receive_message(Get_trade_huashu_bought_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_trade_huashu_bought failed: unknown result')
          end

          def get_trade_huashu_fullinfo(session, params)
            send_get_trade_huashu_fullinfo(session, params)
            return recv_get_trade_huashu_fullinfo()
          end

          def send_get_trade_huashu_fullinfo(session, params)
            send_message('get_trade_huashu_fullinfo', Get_trade_huashu_fullinfo_args, :session => session, :params => params)
          end

          def recv_get_trade_huashu_fullinfo()
            result = receive_message(Get_trade_huashu_fullinfo_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_trade_huashu_fullinfo failed: unknown result')
          end

          def add_sns_msg(session, params)
            send_add_sns_msg(session, params)
            return recv_add_sns_msg()
          end

          def send_add_sns_msg(session, params)
            send_message('add_sns_msg', Add_sns_msg_args, :session => session, :params => params)
          end

          def recv_add_sns_msg()
            result = receive_message(Add_sns_msg_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'add_sns_msg failed: unknown result')
          end

          def get_ump_promotion_increment(session, params)
            send_get_ump_promotion_increment(session, params)
            return recv_get_ump_promotion_increment()
          end

          def send_get_ump_promotion_increment(session, params)
            send_message('get_ump_promotion_increment', Get_ump_promotion_increment_args, :session => session, :params => params)
          end

          def recv_get_ump_promotion_increment()
            result = receive_message(Get_ump_promotion_increment_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_ump_promotion_increment failed: unknown result')
          end

          def get_ju_detail(session, params)
            send_get_ju_detail(session, params)
            return recv_get_ju_detail()
          end

          def send_get_ju_detail(session, params)
            send_message('get_ju_detail', Get_ju_detail_args, :session => session, :params => params)
          end

          def recv_get_ju_detail()
            result = receive_message(Get_ju_detail_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_ju_detail failed: unknown result')
          end

          def join_ju_group(session, params)
            send_join_ju_group(session, params)
            return recv_join_ju_group()
          end

          def send_join_ju_group(session, params)
            send_message('join_ju_group', Join_ju_group_args, :session => session, :params => params)
          end

          def recv_join_ju_group()
            result = receive_message(Join_ju_group_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'join_ju_group failed: unknown result')
          end

          def get_ju_promotion(params)
            send_get_ju_promotion(params)
            return recv_get_ju_promotion()
          end

          def send_get_ju_promotion(params)
            send_message('get_ju_promotion', Get_ju_promotion_args, :params => params)
          end

          def recv_get_ju_promotion()
            result = receive_message(Get_ju_promotion_result)
            return result.success unless result.success.nil?
            raise result.ire unless result.ire.nil?
            raise result.ue unless result.ue.nil?
            raise result.te unless result.te.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get_ju_promotion failed: unknown result')
          end

        end

        class Processor
          include ::Thrift::Processor

          def process_get_user_buyer(seqid, iprot, oprot)
            args = read_args(iprot, Get_user_buyer_args)
            result = Get_user_buyer_result.new()
            begin
              result.success = @handler.get_user_buyer(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_user_buyer', seqid)
          end

          def process_get_shipping_addresses(seqid, iprot, oprot)
            args = read_args(iprot, Get_shipping_addresses_args)
            result = Get_shipping_addresses_result.new()
            begin
              result.success = @handler.get_shipping_addresses(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_shipping_addresses', seqid)
          end

          def process_add_shipping_addresses(seqid, iprot, oprot)
            args = read_args(iprot, Add_shipping_addresses_args)
            result = Add_shipping_addresses_result.new()
            begin
              result.success = @handler.add_shipping_addresses(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'add_shipping_addresses', seqid)
          end

          def process_get_itemcats(seqid, iprot, oprot)
            args = read_args(iprot, Get_itemcats_args)
            result = Get_itemcats_result.new()
            begin
              result.success = @handler.get_itemcats(args.opts)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_itemcats', seqid)
          end

          def process_get_item_dealinfo(seqid, iprot, oprot)
            args = read_args(iprot, Get_item_dealinfo_args)
            result = Get_item_dealinfo_result.new()
            begin
              result.success = @handler.get_item_dealinfo(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_item_dealinfo', seqid)
          end

          def process_search_logistics_trace(seqid, iprot, oprot)
            args = read_args(iprot, Search_logistics_trace_args)
            result = Search_logistics_trace_result.new()
            begin
              result.success = @handler.search_logistics_trace(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'search_logistics_trace', seqid)
          end

          def process_get_trade_bought(seqid, iprot, oprot)
            args = read_args(iprot, Get_trade_bought_args)
            result = Get_trade_bought_result.new()
            begin
              result.success = @handler.get_trade_bought(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_trade_bought', seqid)
          end

          def process_get_trade_fullinfo(seqid, iprot, oprot)
            args = read_args(iprot, Get_trade_fullinfo_args)
            result = Get_trade_fullinfo_result.new()
            begin
              result.success = @handler.get_trade_fullinfo(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_trade_fullinfo', seqid)
          end

          def process_create_trade(seqid, iprot, oprot)
            args = read_args(iprot, Create_trade_args)
            result = Create_trade_result.new()
            begin
              result.success = @handler.create_trade(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'create_trade', seqid)
          end

          def process_get_trade_huashu_bought(seqid, iprot, oprot)
            args = read_args(iprot, Get_trade_huashu_bought_args)
            result = Get_trade_huashu_bought_result.new()
            begin
              result.success = @handler.get_trade_huashu_bought(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_trade_huashu_bought', seqid)
          end

          def process_get_trade_huashu_fullinfo(seqid, iprot, oprot)
            args = read_args(iprot, Get_trade_huashu_fullinfo_args)
            result = Get_trade_huashu_fullinfo_result.new()
            begin
              result.success = @handler.get_trade_huashu_fullinfo(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_trade_huashu_fullinfo', seqid)
          end

          def process_add_sns_msg(seqid, iprot, oprot)
            args = read_args(iprot, Add_sns_msg_args)
            result = Add_sns_msg_result.new()
            begin
              result.success = @handler.add_sns_msg(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'add_sns_msg', seqid)
          end

          def process_get_ump_promotion_increment(seqid, iprot, oprot)
            args = read_args(iprot, Get_ump_promotion_increment_args)
            result = Get_ump_promotion_increment_result.new()
            begin
              result.success = @handler.get_ump_promotion_increment(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_ump_promotion_increment', seqid)
          end

          def process_get_ju_detail(seqid, iprot, oprot)
            args = read_args(iprot, Get_ju_detail_args)
            result = Get_ju_detail_result.new()
            begin
              result.success = @handler.get_ju_detail(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_ju_detail', seqid)
          end

          def process_join_ju_group(seqid, iprot, oprot)
            args = read_args(iprot, Join_ju_group_args)
            result = Join_ju_group_result.new()
            begin
              result.success = @handler.join_ju_group(args.session, args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'join_ju_group', seqid)
          end

          def process_get_ju_promotion(seqid, iprot, oprot)
            args = read_args(iprot, Get_ju_promotion_args)
            result = Get_ju_promotion_result.new()
            begin
              result.success = @handler.get_ju_promotion(args.params)
            rescue TaobaoThrift::InvalidRequestException => ire
              result.ire = ire
            rescue TaobaoThrift::UnavailableException => ue
              result.ue = ue
            rescue TaobaoThrift::TimedOutException => te
              result.te = te
            end
            write_result(result, oprot, 'get_ju_promotion', seqid)
          end

        end

        # HELPER FUNCTIONS AND STRUCTURES

        class Get_user_buyer_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_user_buyer_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_shipping_addresses_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_shipping_addresses_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Add_shipping_addresses_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Add_shipping_addresses_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_itemcats_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          OPTS = 1

          FIELDS = {
            OPTS => {:type => ::Thrift::Types::MAP, :name => 'opts', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_itemcats_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_item_dealinfo_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_item_dealinfo_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Search_logistics_trace_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Search_logistics_trace_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_bought_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_bought_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_fullinfo_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_fullinfo_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Create_trade_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Create_trade_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_huashu_bought_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_huashu_bought_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_huashu_fullinfo_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_trade_huashu_fullinfo_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Add_sns_msg_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Add_sns_msg_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_ump_promotion_increment_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_ump_promotion_increment_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_ju_detail_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_ju_detail_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Join_ju_group_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SESSION = 1
          PARAMS = 2

          FIELDS = {
            SESSION => {:type => ::Thrift::Types::STRING, :name => 'session'},
            PARAMS => {:type => ::Thrift::Types::MAP, :name => 'params', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Join_ju_group_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_ju_promotion_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          PARAMS = 1

          FIELDS = {
            PARAMS => {:type => ::Thrift::Types::LIST, :name => 'params', :element => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Get_ju_promotion_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0
          IRE = 1
          UE = 2
          TE = 3

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRING}},
            IRE => {:type => ::Thrift::Types::STRUCT, :name => 'ire', :class => TaobaoThrift::InvalidRequestException},
            UE => {:type => ::Thrift::Types::STRUCT, :name => 'ue', :class => TaobaoThrift::UnavailableException},
            TE => {:type => ::Thrift::Types::STRUCT, :name => 'te', :class => TaobaoThrift::TimedOutException}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

      end

    end
